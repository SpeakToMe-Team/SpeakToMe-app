<% layout('../layout') %>

    <div class="dashboard-page" id="dashboard">
        <div id="wrapper">

            <!-- block help -->
            <%-partial('../blocks/help')%>
            <!-- fin block help -->
            
            <div id="page-content-wrapper">
                <a href="#menu-toggle" class="dicta" id="menu-toggle">Aide</a>
                
                <!-- block nav -->
                <%-partial('../blocks/nav')%>
                <!-- fin block nav -->

                <!-- Modal settings-->
                <%-partial('../blocks/settings')%>
                <!-- fin Modal settings-->

                <!-- Modal profil-->
                <%-partial('../blocks/account')%>
                <!-- fin Modal profil-->

                <section class="container-fluid" id="main">
                    <div class="row">
                        <article class="search col-sm-12 animated zoomInUp">
                            <i class="fa fa-microphone" aria-hidden="true"></i>
                            <input v-bind:value="phrase" type="text" name="request" placeholder="Dictez ou écrivez votre recherche ...">
                        </article>

                        <article class=" col-sm-12 col-lg-10 animated zoomInUp">
                                <div class="result col-md-12">
                            <h2 class="title">Resultats</h2>

                            <div class="module-weather" :class="{ hide: isActiveWeatherModule}">
                                    <%-partial('../modules/nomodule')%>
                            </div>
                            <div class="module-weather" :class="{ hide: !isActiveWeatherModule }">
                                <%-partial('../modules/meteo')%>
                            </div>
                            <div class="module-music" :class="{ hide: !isActiveMusicModule }">
                                <%-partial('../modules/spotify')%>
                            </div>
                            <div class="module-movie" :class="{ hide: !isActiveMovieModule }">
                                <%-partial('../modules/allocine')%>
                            </div>
                            <div class="module-travel" :class="{ hide: !isActiveTravelModule }">
                                <%-partial('../modules/yelp')%>
                            </div>
                                </div>
                        </article>

                        <article class="col-sm-12 col-lg-2 animated zoomInUp">
                                <div class="recommandation col-md-12">
                            <h2 class="title">Suggestions</h2>
                                </div>
                        </article>
                    </div>
                </section>
            </div>
            
            <p><input type="button" value="Embêter le serveur" id="poke" /></p>
       </div>
   </div>
</div>

<script>
    var dashboard = new Vue({
        el: "#dashboard",
        data: {
            title: "SpeakToMe",
            phrase: '',
            isActiveMovieModule: false,
            isActiveMusicModule: false,
            isActiveTravelModule: false,
            isActiveWeatherModule: false,
            contentWeather: '',
            tempWeather: ''
        },
        methods: {
            init: function () {
                this.isActiveMovieModule = false
                this.isActiveMusicModule = false
                this.isActiveTravelModule = false
                this.isActiveWeatherModule = false
                this.contentWeather = ''
            }
        }
    });
</script>

<script>

    class Module {
        constructor (json) {
            this._json = json;
        }

        get json() {
            return this._json;
        }

        set json(newJson){
            this._json = newJson;
        }

        getIntent () {
            return this._json.intent;
        }

    }

    class MovieModule {
        constructor (json) {
            this._jsonMovie = json;
            this._jour = false;
        }

        get jsonMovie() {
            return this._jsonMovie;
        }

        set jsonMovie(newJson){
            this._jsonMovie = newJson;
        }

        getIntent () {
            return this._jsonMovie.intent;
        }

        
    }  

    class WeatherModule {
        constructor (json) {
            this._jsonWeather = json;
            this._jour = false;
        }

        get jsonWeather() {
            return this._jsonWeather;
        }

        set jsonWeather(newJson){
            this._jsonWeather = newJson;
        }

        getIntent () {
            return this._jsonWeather.intent;
        }

        getLocation () {
            return this._jsonWeather.response.city.name;
        }

        getNumberList() {
            if(this._jsonWeather.response['list'].length > 0){
                return this._jsonWeather.response['list'].length;
            }else{
                return false;
            }
        }

        getElementDisplay () {
            let number = this.getNumberList();
            if(number > 0 ){
                let list = this._jsonWeather.response['list'];        

                    list.forEach(function(element, index) {
                        if(element.display === true){
                            console.log(index + ' => ' + element.temp.min);
                            this._jour = index;
                        }
                    }, this);
                    
                    console.log('jour ? : ' + this._jour);

                return this._jour;
            }else{
                return "Pas d'informations !";
            }          
        }        
    }

    $("#menu-toggle").click(function(e) {
        e.preventDefault();
        $("#wrapper").toggleClass("toggled");
    });

    socket.on('message', function(message) {
        alert('Le serveur a un message pour vous : ' + message.title);
    })

    $('#poke').click(function (event) {
        event.preventDefault();
        console.log('poke');
        socket.emit('message', 'Salut serveur, ça va ?');
    })
  
    var emitQuestion = function(question){
        console.log('question ? ' + question);
        socket.emit('question', question);
        
        parler('Je viens de lancer la recherche, merci de patienter !');
    }

    var show = function(answer) {
        console.log(answer);

        // Réinitialisation
        dashboard.init();        

        let mainModule = new Module(answer);
        var intent = mainModule.getIntent();

        console.log('intent : ' + intent);

        switch (intent) {
            case "weather":
                /* Traitement pour le weather */
                let  weather = new WeatherModule(answer);
                let stringIntent = weather.getIntent();
                console.log('intent : ' + stringIntent);
                let stringLocation = weather.getLocation();
                console.log('ville : ' + stringLocation);
                console.log('nombre : ' + weather.getNumberList());

                if( weather.getNumberList() !== false){

                    console.log('jour ? ' + weather.getElementDisplay());
                    let jourAfficher = weather.getElementDisplay();
                    let jourAfficherContent = weather.jsonWeather.response['list'][jourAfficher];
                    let dateJourAfficher = jourAfficherContent.dt * 1000;
                    console.log('time : ' + dateJourAfficher);
                    var stringJour = moment(dateJourAfficher).format("dddd D MMMM YYYY");
                    var stringDescription = jourAfficherContent.weather['0']['description'];
                    var iconDescription = 'http://openweathermap.org/img/w/' + jourAfficherContent.weather['0'].icon + '.png';
                    console.log('icone : ' + iconDescription);
                    var temperatureDescription = jourAfficherContent.temp;
                    var srcStart = "https://maps.google.com/maps?q=";
                    var srcLoc = stringLocation;
                    var srcEnd = "%2C%20FR&t=&z=14&ie=UTF8&iwloc=&output=embed";
                    var src = srcStart + srcLoc + srcEnd;
                    $("#iframeMeteo")[0].setAttribute("src", src);
                    
                    console.log('moment js : ' + stringJour);

                    var stringVoiceMsg = 'La météo de ' + stringJour + ' à ' + stringLocation + ', ' + stringDescription + ' avec des températures de ' + Math.floor(temperatureDescription.morn) + ' degré le matin, ' + Math.floor(temperatureDescription.eve) + ' degré le soir et ' + Math.floor(temperatureDescription.night) + ' degré la nuit.';
                    console.log('msg vocal ' + stringVoiceMsg);

                    //Vue js
                    var content = {
                        location: stringLocation,
                        date: stringJour,
                        msgVocal: stringVoiceMsg,
                        picture: iconDescription,
                        description: stringDescription,
                        map: src
                    }

                    var temp = {
                        day: temperatureDescription.day,
                        morn: temperatureDescription.morn,
                        eve: temperatureDescription.eve,
                        night: temperatureDescription.night
                    }
                    
                    dashboard.contentWeather = content;
                    dashboard.tempWeather = temp;
                    dashboard.isActiveWeatherModule = true;

                    parler(stringVoiceMsg);

                }else{
                    dashboard.isActiveWeatherModule = false;
                    parler("Désolé ! Je n'ai pas trouvé de réponse à votre question.");
                }

                break;
            case "movie":
                console.log('movie');
                dashboard.contentMovie = answer;                
                dashboard.isActiveMovieModule = true;
                break;
            case "travel":

                break;
            case "travel":

                break;
            default:
                
                break;        
        }        
    }   

    var repeterModule = function() {
        var text = $('#msgVocal').text();
        if(text.length > 0){
            var stringVoiceMsg = text;
        }else{
            var stringVoiceMsg = "Désolé, je n'ai pas message à vous dire !";
        }

        parler(stringVoiceMsg);

    }

    var parler = function (stringVoiceMsg){
        annyang.pause();

        var synth = window.speechSynthesis;

        var utterThis = new SpeechSynthesisUtterance(stringVoiceMsg);
        utterThis.lang = 'fr-FR';
        utterThis.pitch = 1;
        utterThis.rate = 1;

        synth.speak(utterThis);

        annyang.resume();
        annyang.resume();
    }

   if (annyang) {
       var commands = {
           'effacer recherche': function() {
               dashboard.phrase = '';
               dashboard.content = '';
               dashboard.init();
           },
           "je n'ai pas bien entendu": repeterModule,
           'ouvrir panneau': function() {
               $('#settings').modal('show');
           },
           'fermer panneau': function() {
               $('#settings').modal('hide');
           },
           'ouvrir aide': function() {
               $("#wrapper").toggleClass("toggled");
           },
           'fermer aide': function() {
               $("#wrapper").toggleClass("toggled");
           },
           'ouvrir profil': function() {
               $('#user').modal('show');
           },
           'fermer profil': function() {
               $('#user').modal('hide');
           },          
           'écouter musique': function() { // Ne marche pas
               //$('#play-button').click();
               console.log('lancer la musique');
               $('#test-button').trigger('submit');
              
           },
           // Pour toutes les recherches avec l'API : définir un mot clé 'ok google'...
           'ok google *question': emitQuestion
       };
       annyang.addCommands(commands);
       annyang.setLanguage('fr-FR');
      
       annyang.addCallback('result', function(phrases) {
           console.log("I think the user said: ", phrases[0]);
           dashboard.phrase = phrases[0];
           console.log("But then again, it could be any of the following: ", phrases);
       });

       annyang.start();
    }

    socket.on('answer', function(answer) {
        console.log('réception de la réponse');
        //console.log(answer);

        show(answer);
    });
</script>
<script>
    
</script>